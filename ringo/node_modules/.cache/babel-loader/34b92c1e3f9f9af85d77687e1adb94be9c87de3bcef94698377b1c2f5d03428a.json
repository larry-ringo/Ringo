{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useWindowSize.ts\nimport { useState, useEffect } from \"react\";\nexport default function useWindowSize() {\n  _s();\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => setSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return size;\n}\n_s(useWindowSize, \"KaYC9aiI2wtWC4VdRnW7noQXaSY=\");","map":{"version":3,"names":["useState","useEffect","useWindowSize","_s","size","setSize","width","window","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener"],"sources":["/Users/arash/Library/CloudStorage/OneDrive-Personal/Documents/Ringo/ringo/src/hooks/useWindowSize.ts"],"sourcesContent":["// src/hooks/useWindowSize.ts\nimport { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const [size, setSize] = useState<{ width: number; height: number }>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () =>\n      setSize({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return size;\n}\n\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAoC;IAClEM,KAAK,EAAEC,MAAM,CAACC,UAAU;IACxBC,MAAM,EAAEF,MAAM,CAACG;EACjB,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAGA,CAAA,KACnBN,OAAO,CAAC;MAAEC,KAAK,EAAEC,MAAM,CAACC,UAAU;MAAEC,MAAM,EAAEF,MAAM,CAACG;IAAY,CAAC,CAAC;IACnEH,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAC/C,OAAO,MAAMJ,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOP,IAAI;AACb;AAACD,EAAA,CAduBD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}